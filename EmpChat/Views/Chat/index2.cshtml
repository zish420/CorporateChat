@{
    ViewData["Title"] = "Chat Page";
}

<div class="container-fluid">
    <input type="hidden" id="currentUserId" value="@User.FindFirst("id")?.Value" />

    <div class="row vh-100">
        <!-- Left Sidebar: Profile Picture, Search Box, and Chat List -->
        <div class="col-3 bg-light p-3 border-end">
            <h4 class="mb-3">Chats</h4>

            <!-- Search Box -->
            <div class="mb-3">
                <input type="text" id="searchUser" class="form-control" placeholder="Search users..." />
                <ul id="userList" class="list-group mt-2">
                    <!-- Dynamic suggestions populated here -->
                </ul>
            </div>

            <!-- Static Chat List (or dynamically load chat list) -->
            <div id="chatList" class="list-group">
                <a href="#" class="list-group-item list-group-item-action d-flex align-items-center">
                    <img src="/lib/Sound/profile.png" alt="Profile Pic" class="rounded-circle me-2">
                    <span>User 1</span>
                </a>
                <a href="#" class="list-group-item list-group-item-action d-flex align-items-center">
                    <img src="/lib/Sound/profile.png" alt="Profile Pic" class="rounded-circle me-2">
                    <span>User 2</span>
                </a>
            </div>
        </div>

        <!-- Chat Area -->
        <div class="col-9">
            <!-- Chat Header -->
            <div id="chatHeader" class="d-flex align-items-center border-bottom p-2">
                <img src="/lib/Sound/profile.png" alt="Active User Pic" class="rounded-circle me-3" style="max-width: 50px; max-height: 50px;">
                <h5 class="mb-0" id="activeUserName">Active User</h5>
            </div>

            <!-- Chat Messages -->
            <div id="chatMessages" class="chat-messages p-3" style="height: 70vh; overflow-y: scroll; background-color: #f9f9f9;">
                <div class="d-flex flex-column">
                    <div class="mb-3">
                        <strong>User 1:</strong>
                        <p class="bg-light rounded p-2">Hello, how are you?</p>
                    </div>
                    <div class="text-end mb-3">
                        <strong>You:</strong>
                        <p class="bg-primary text-white rounded p-2">I'm good, thanks! How about you?</p>
                    </div>
                </div>
            </div>

            <!-- Chat Input -->
            <div class="p-3 border-top">
                <div class="input-group">
                    <input type="text" id="messageInput" class="form-control" placeholder="Type a message..." />
                    <button id="sendMessage" class="btn btn-primary">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .list-group-item img {
        width: 40px;
        height: 40px;
    }

    .chat-messages p {
        max-width: 60%;
    }

    .chat-messages .text-end p {
        margin-left: auto;
    }

    #userList li {
        cursor: pointer;
        padding: 5px;
    }

        #userList li:hover {
            background-color: #f0f0f0;
        }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.15/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    // Search Users Dynamically
    document.getElementById("searchUser").addEventListener("input", async function () {
        const query = this.value.trim();
        const userList = document.getElementById("userList");
        userList.innerHTML = ""; // Clear current list

        if (query.length < 2) return; // Fetch only if query is meaningful

        try {
            const response = await fetch(`/api/users/search?query=${query}`);
            const users = await response.json();

            if (users.length === 0) {
                userList.innerHTML = `<li class="list-group-item">No users found</li>`;
                return;
            }

            users.forEach(user => {
                const li = document.createElement("li");
                li.classList.add("list-group-item", "d-flex", "align-items-center");
                li.innerHTML = `
                            <img src="/lib/Sound/profile.png" alt="Profile Pic" class="rounded-circle me-2">
                        <span>${user.userName}</span>
                    `;
                li.onclick = () => {
                    setupChat(user.id, user.userName);
                };
                userList.appendChild(li);
            });
        } catch (err) {
            console.error("Error fetching users:", err);
        }
    });

    function setupChat(userId, userName) {
        const chatHeader = document.getElementById("chatHeader");
        const chatMessages = document.getElementById("chatMessages");

        // Set active user in the header
        chatHeader.querySelector("img").src = "/lib/Sound/profile.png"; 
        document.getElementById("activeUserName").textContent = userName;

        // Clear chat messages and set up chat
        chatMessages.innerHTML = `<h4>Chatting with ${userName}</h4>`;
    }

    // Sending Messages
    document.getElementById("sendMessage").onclick = function () {
        const message = document.getElementById("messageInput").value;
        if (!message.trim()) {
            alert("Message cannot be empty!");
            return;
        }

        // Append the message to the chat
        const chatMessages = document.getElementById("chatMessages");
        chatMessages.innerHTML += `
                <div class="text-end mb-3">
                    <strong>You:</strong>
                    <p class="bg-primary text-white rounded p-2">${message}</p>
                </div>
            `;

        // Clear input
        document.getElementById("messageInput").value = "";
        chatMessages.scrollTop = chatMessages.scrollHeight; 
    };

    connection.start().catch(function (err) {
        console.error("SignalR connection error:", err.toString());
    });
</script>
